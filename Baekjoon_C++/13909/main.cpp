#include <iostream>
#include <cmath>

// 맨 처음 닫혀있던 창문들이 최종적으로 열려 있을라면, 홀수번 여닫이 해야함.
// 1...n번 사람이 n번 창문을 여닫이 하는 횟수는, n의 약수의 개수임.
// 결국 창문이 열려있을라면, 약수가 홀수개 이어야 함.
// 약수가 홀수개 이려면, 제곱수 밖에 없음.
// 왜 why? 숫자 A의 약수를 1 ... a b ... A 라고 하면(A = ab)(약수는 결국 쌍을 이루니깐),
// 홀수 이려면 결국 가운데 약수는 a = b 이어야 함.
// 결국 제곱수의 창문만 열려있음.
// 따라서 n이하인 제곱수의 개수를 출력하면 정답.

int main() {
	int n;
	std::cin >> n;
	std::cout << floor(sqrt(n));
	return 0;
}